program RealArrays;

function reverseArray (arr : array [] of real) : array [] of real; 
begin
    var reversed : array [arr.size] of real;
	var i : integer;
	var j : integer;
	i := 0;
	j := arr.size - 1;
	while i < arr.size do
	begin
		reversed[j] := arr[i];
		j := j - 1;
		i := i + 1;
	end;
	return reversed;
end;

procedure printArray (arr : array [] of real);
begin
    var i : integer;
	i := 0;
	while i < arr.size do
	begin
		writeln(arr[i]);
		i := i + 1;
	end;
end;

begin
	{* Declare array of reals, also empty one *}
    var myArray1, myArray2 : array [4] of real;
	var myArray3 : array [] of real;

	{* Insert values to arrays *}
	myArray1[0] := 1.0;
	myArray1[1] := 2.123e-1;
	myArray1[2] := -3.2;
	myArray1[3] := 4;
	
	myArray2 := myArray1;
    
	{* Function and procedure calls *}
	printArray(myArray1);
	printArray(myArray2);
	myArray3 := reverseArray(myArray1);
	printArray(myArray3);

	{* Some basic operations with reals *}
	myArray1[0] := myArray1[0] + myArray1[0];
	myArray1[1] := myArray1[1] - myArray1[1];
	myArray1[2] := myArray1[2] * myArray1[2];
	myArray1[3] := myArray1[3] / myArray1[3];

	printArray(myArray1);
	printArray(myArray2);
	printArray(myArray3);
end.